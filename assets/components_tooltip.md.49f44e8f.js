import{_ as t,c as d,o as e,Q as o}from"./chunks/framework.4de05327.js";const m=JSON.parse('{"title":"Tooltip | Z-Element","description":"Tooltip 组件的文档","frontmatter":{"title":"Tooltip | Z-Element","description":"Tooltip 组件的文档"},"headers":[],"relativePath":"components/tooltip.md","filePath":"components/tooltip.md","lastUpdated":1699410381000}'),a={name:"components/tooltip.md"},r=o('<h1 id="tooltip-文字提示" tabindex="-1">Tooltip 文字提示 <a class="header-anchor" href="#tooltip-文字提示" aria-label="Permalink to &quot;Tooltip 文字提示&quot;">​</a></h1><p>常用于展示鼠标 hover 时的提示信息。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>在这里我们提供 9 种不同方向的展示方式，可以通过以下完整示例来理解，选择你要的效果。</p><p>使用 content 属性来决定 hover 时的提示信息。 由 placement 属性决定展示效果： placement属性值为：[方向]-[对齐位置]；四个方向：top、left、right、bottom；三种对齐位置：start, end，默认为空。 如 placement=&quot;left-end&quot;，则提示信息出现在目标元素的左侧，且提示信息的底部与目标元素的底部对齐。</p><h3 id="tooltip-attributes" tabindex="-1">Tooltip Attributes <a class="header-anchor" href="#tooltip-attributes" aria-label="Permalink to &quot;Tooltip Attributes&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>content</td><td>显示的内容，也可被 slot#content 覆盖</td><td>string</td><td>&#39;&#39;</td></tr><tr><td>trigger</td><td>如何触发 Tooltip</td><td><code>enum - &#39;hover&#39; | &#39;click&#39; </code></td><td>hover</td></tr><tr><td>manual</td><td>启动收到模式</td><td><code>boolean</code></td><td>false</td></tr><tr><td>popperOptions</td><td>是否显示切换密码图标</td><td><code>boolean</code></td><td>false</td></tr><tr><td>placeholder</td><td>popper.js 参数</td><td><code>object 请参考 popper.js 文档</code></td><td>{}</td></tr><tr><td>transition</td><td>动画名称</td><td><code>string</code></td><td>&#39;fade-in-linear&#39;</td></tr><tr><td>visible</td><td>Tooltip 组件可见性</td><td><code>boolean</code></td><td>—</td></tr><tr><td>showAfter</td><td>在触发后多久显示内容，单位毫秒</td><td><code>number</code></td><td>0</td></tr><tr><td>hideAfter</td><td>延迟关闭，单位毫秒</td><td><code>number</code></td><td>0</td></tr><tr><td>appendTo</td><td>指示 Tooltip 的内容将附加在哪一个网页元素上</td><td><code>string</code></td><td>—</td></tr><tr><td>teleported</td><td>是否使用 teleport。设置成 true则会被追加到 append-to 的位置</td><td><code>boolean</code></td><td>false</td></tr><tr><td>placement</td><td>Tooltip 组件出现的位置</td><td><code>enum - &#39;top&#39; | &#39;top-start&#39; | &#39;top-end&#39; | &#39;bottom&#39; | &#39;bottom-start&#39; | &#39;bottom-end&#39; | &#39;left&#39; | &#39;left-start&#39; | &#39;left-end&#39; | &#39;right&#39; | &#39;right-start&#39; | &#39;right-end&#39;</code></td><td>top</td></tr></tbody></table><h3 id="input-events" tabindex="-1">Input Events <a class="header-anchor" href="#input-events" aria-label="Permalink to &quot;Input Events&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>visible-change</td><td>提示框状态改变</td><td><code>(value: boolean) =&gt; void</code></td></tr><tr><td>click-outside</td><td>是否点击容器之外的位置</td><td><code>(value: boolean) =&gt; void</code></td></tr></tbody></table><h3 id="input-slots" tabindex="-1">Input Slots <a class="header-anchor" href="#input-slots" aria-label="Permalink to &quot;Input Slots&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Tooltip 触发 &amp; 引用的元素</td></tr><tr><td>content</td><td>自定义内容</td></tr></tbody></table><h3 id="exposes" tabindex="-1">Exposes <a class="header-anchor" href="#exposes" aria-label="Permalink to &quot;Exposes&quot;">​</a></h3><table><thead><tr><th>名称</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>onOpen</td><td>onOpen 方法控制 el-tooltip 显示状态</td><td><code>() =&gt; void</code></td></tr><tr><td>onClose</td><td>onClose 方法控制 el-tooltip 显示状态</td><td><code>() =&gt; void</code></td></tr></tbody></table>',13),l=[r];function n(i,p,s,c,h,b){return e(),d("div",null,l)}const f=t(a,[["render",n]]);export{m as __pageData,f as default};
